---

services:

  front_react:
    build:
      context: .
      dockerfile: ./frontend/build/Dockerfile
    volumes:
      - ./frontend/src:/app
    command: sh -c "cd react-app && npm run dev"
    ports:
      - "8080:3000"
    stdin_open: true

  back_go:
    build:
      context: .
      dockerfile: ./backend/build/Dockerfile
    volumes:
      - ./backend/src:/go/src
    command: sh -c "go run main.go"
    ports:
      - "3030:8080"
    tty: true
    stdin_open: true
    env_file: # .envファイル
      - ./backend/build/.go_env
    depends_on:
      - Postgre

  Postgre:
    container_name: ${DB_HOST}
    image: postgres
    platform: linux/amd64
    ports:
      - "${DB_PORT}:5432"
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./Database/init:/docker-entrypoint-initdb.d
  
  adminer:
    image: adminer
    ports:
      - "8888:8080"
    depends_on:
      - Postgre

  testapache:
    image: httpd
    ports:
      - "8088:80"
    volumes:
      - ./httpd:/usr/local/apache2/htdocs/

volumes:
  db_data:

...